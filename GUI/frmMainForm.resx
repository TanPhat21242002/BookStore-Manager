<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTao.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>